"""Place holders for unimplemented routes.

This will display arxiv themed pages for routes of arxiv that are not
implemented by arxiv browse.

The intent is that this could be used to server a "please stand by" message in
the case of unavailability of other parts of the system.
"""
from flask import (
    Blueprint,
    Response,
    current_app,
    make_response,
    render_template
)

blueprint = Blueprint("unimplemented", __name__)

# these commenetd out blueprints are ones that the arxiv-browse or
# arxiv-search systems should sooner or later should probably implement.
# @blueprint.route("/docmeta/", defaults={"path":""})
# @blueprint.route("/docmeta/<path:path>")
# @blueprint.route("/docmeta_bulk/", defaults={"path":""})
# @blueprint.route("/docmeta_bulk/<path:path>")
# @blueprint.route("/docmeta/", defaults={"path":""})
# @blueprint.route("/docmeta/<path:path>")
# @blueprint.route("/tar/", defaults={"path":""})
# @blueprint.route("/tar/<path:path>")
# @blueprint.route("/abstar/", defaults={"path":""})
# @blueprint.route("/abstar/<path:path>")
# @blueprint.route("/view/", defaults={"path":""})
# @blueprint.route("/view/<path:path>")
# @blueprint.route("/cits/", defaults={"path":""})
# @blueprint.route("/cits/<path:path>")
# @blueprint.route("/refs/", defaults={"path":""})
# @blueprint.route("/refs/<path:path>")
# @blueprint.route("/ps/", defaults={"path":""})
# @blueprint.route("/ps/<path:path>")
# @blueprint.route("/psfigs/", defaults={"path":""})
# @blueprint.route("/psfigs/<path:path>")
# @blueprint.route("/dvi/", defaults={"path":""})
# @blueprint.route("/dvi/<path:path>")
# @blueprint.route("/openurl-cookie/", defaults={"path":""})
# @blueprint.route("/openurl-cookie/<path:path>")
# @blueprint.route("/openurl-resolver/", defaults={"path":""})
# @blueprint.route("/openurl-resolver/<path:path>")
# @blueprint.route("/ftp/<path:path>")


@blueprint.route("/403.html")
@blueprint.route("/IgnoreMe.html")
@blueprint.route("/IgnoreMe/")
@blueprint.route("/IgnoreMe/<path:path>")
@blueprint.route("/abs/pending/")
@blueprint.route("/abs/pending/<path:path>")
@blueprint.route("/abs/rejected/")
@blueprint.route("/abs/rejected/<path:path>")
@blueprint.route("/abs/replaced/")
@blueprint.route("/abs/replaced/<path:path>")
@blueprint.route("/abs_classic /")
@blueprint.route("/abs_classic /<path:path>")
@blueprint.route("/add_cross")
@blueprint.route("/add_cross/")
@blueprint.route("/add_cross/<path:path>")
@blueprint.route("/add_jref/")
@blueprint.route("/add_jref/<path:path>")
@blueprint.route("/admin/")
@blueprint.route("/admin/<path:path>")
@blueprint.route("/adminapi/")
@blueprint.route("/adminapi/<path:path>")
@blueprint.route("/admindoc/")
@blueprint.route("/admindoc/<path:path>")
@blueprint.route("/api/")
@blueprint.route("/api/<path:path>")
@blueprint.route("/art/")
@blueprint.route("/art/<path:path>")
@blueprint.route("/auth/")
@blueprint.route("/auth/<path:path>")
@blueprint.route("/auth/upload_status/")
@blueprint.route("/auth/upload_status/<path:path>")
@blueprint.route("/blurb/")
@blueprint.route("/blurb/<path:path>")
@blueprint.route("/busybody")
@blueprint.route("/checkcredentials/")
@blueprint.route("/checkcredentials/<path:path>")
@blueprint.route("/covid19search/")
@blueprint.route("/covid19search/<path:path>")
@blueprint.route("/cross/")
@blueprint.route("/cross/<path:path>")
@blueprint.route("/cs/")
@blueprint.route("/cs/<path:path>")
@blueprint.route("/denied.html")
@blueprint.route("/find/")
@blueprint.route("/find/<path:path>")
@blueprint.route("/form/")
@blueprint.route("/form/<path:path>")
@blueprint.route("/ftp/")
@blueprint.route("/get_log/")
@blueprint.route("/get_log/<path:path>")
@blueprint.route("/help/submit_checklist/")
@blueprint.route("/help/submit_checklist/<path:path>")
@blueprint.route("/iarxiv_login")
@blueprint.route("/iarxiv_login/<path:path>")
@blueprint.route("/iarxiv_login<path:path>")
@blueprint.route("/inspire_login")
@blueprint.route("/inspire_login/")
@blueprint.route("/inspire_login/<path:path>")
@blueprint.route("/jref/")
@blueprint.route("/jref/<path:path>")
@blueprint.route("/licenses/assumed-1991-2003/")
@blueprint.route("/licenses/assumed-1991-2003/<path:path>")
@blueprint.route("/licenses/nonexclusive-distrib/1.0/")
@blueprint.route("/licenses/nonexclusive-distrib/1.0/<path:path>")
@blueprint.route("/mirror_confirm/")
@blueprint.route("/mirror_confirm/<path:path>")
@blueprint.route("/mod/")
@blueprint.route("/mod/<path:path>")
@blueprint.route("/mod/<path:path>")
@blueprint.route("/modapi/")
@blueprint.route("/modapi/<path:path>")
@blueprint.route("/moderators/")
@blueprint.route("/moderators/<path:path>")
@blueprint.route("/multi/")
@blueprint.route("/multi/<path:path>")
@blueprint.route("/oai2/")
@blueprint.route("/oai2/<path:path>")
@blueprint.route("/orcid/")
@blueprint.route("/orcid/<path:path>")
@blueprint.route("/pdf/pending/")
@blueprint.route("/pdf/pending/<path:path>")
@blueprint.route("/pdf/rejected/")
@blueprint.route("/pdf/rejected/<path:path>")
@blueprint.route("/pdf/replaced/")
@blueprint.route("/pdf/replaced/<path:path>")
@blueprint.route("/pg.gif")
@blueprint.route("/pg.html")
@blueprint.route("/pgb.gif")
@blueprint.route("/pgm.jpg")
@blueprint.route("/ppw/")
@blueprint.route("/ppw/<path:path>")
@blueprint.route("/ps-errors/")
@blueprint.route("/ps-errors/<path:path>")
@blueprint.route("/ps/pending/")
@blueprint.route("/ps/pending/<path:path>")
@blueprint.route("/ps/rejected")
@blueprint.route("/ps/rejected<path:path>")
@blueprint.route("/ps/replaced/")
@blueprint.route("/ps/replaced/<path:path>")
@blueprint.route("/register/")
@blueprint.route("/register/<path:path>")
@blueprint.route("/replace/")
@blueprint.route("/replace/<path:path>")
@blueprint.route("/replace/<path:path>")
@blueprint.route("/resolve/")
@blueprint.route("/resolve/<path:path>")
@blueprint.route("/rioja/")
@blueprint.route("/rioja/<path:path>")
@blueprint.route("/search_classic/")
@blueprint.route("/search_classic/<path:path>")
@blueprint.route("/seek-and-destroy/")
@blueprint.route("/seek-and-destroy/<path:path>")
@blueprint.route("/set_author_id/")
@blueprint.route("/set_author_id/<path:path>")
@blueprint.route("/show-email/")
@blueprint.route("/show-email/<path:path>")
@blueprint.route("/show_daily_submissionis/")
@blueprint.route("/show_daily_submissionis/<path:path>")
@blueprint.route("/status_db/")
@blueprint.route("/status_db/<path:path>")
@blueprint.route("/submit/")
@blueprint.route("/submit/<path:path>")
@blueprint.route("/support/")
@blueprint.route("/support/<path:path>")
@blueprint.route("/support_admin/")
@blueprint.route("/support_admin/<path:path>")
@blueprint.route("/support_admin_process/")
@blueprint.route("/support_admin_process/<path:path>")
@blueprint.route("/sword-app/")
@blueprint.route("/sword-app/<path:path>")
@blueprint.route("/sword-license/")
@blueprint.route("/sword-license/<path:path>")
@blueprint.route("/sync_submission_data/")
@blueprint.route("/sync_submission_data/<path:path>")
@blueprint.route("/system/")
@blueprint.route("/system/<path:path>")
@blueprint.route("/taridir/")
@blueprint.route("/taridir/<path:path>")
@blueprint.route("/tb/admin/")
@blueprint.route("/tb/admin/<path:path>")
@blueprint.route("/tb_admin/")
@blueprint.route("/tb_admin/<path:path>")
@blueprint.route("/tb_admin/<path:path>")
@blueprint.route("/tb_classic/")
@blueprint.route("/tb_classic/<path:path>")
@blueprint.route("/tl/")
@blueprint.route("/tl/<path:path>")
@blueprint.route("/trackback/")
@blueprint.route("/trackback/<path:path>")
@blueprint.route("/update/")
@blueprint.route("/update/<path:path>")
@blueprint.route("/user/")
@blueprint.route("/user/<path:path>")
@blueprint.route("/user/register/")
@blueprint.route("/user/register/<path:path>")
@blueprint.route("/user/upload_status/")
@blueprint.route("/user/upload_status/<path:path>")
def unimplemented_msg(path: str = "") -> Response:
    data = {"msg_headline": "Unimplemented",
            "msg": "The page you requested is unimplemented."}
    if "UNIMPLEMENTED_MSG" in current_app.config:
        data["msg"] = current_app.config["UNIMPLEMENTED_MSG"]
    if "UNIMPLEMENTED_MSG_HEADLINE" in current_app.config:
        data["msg_headline"] = current_app.config["UNIMPLEMENTED_MSG_HEADLINE"]

    return make_response(render_template("unimplemented.html", **data),
                         503, {})
