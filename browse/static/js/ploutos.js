// Labs integration for displaying streams, code and articles from ploutos.dev

 (function () {
     const container = document.getElementById("ploutos-output")
     const containerAlreadyHasContent = container.innerHTML.trim().length > 0

     const PLOUTOS_ICON = '<svg width="30" height="26" viewBox="0 0 261 225" fill="none" xmlns="http://www.w3.org/2000/svg"> <rect width="261" height="225" rx="48" fill="#312445"/> <path d="M58 115C62.9706 115 67 110.971 67 106C67 101.029 62.9706 97 58 97C53.0294 97 49 101.029 49 106C49 110.971 53.0294 115 58 115Z" fill="url(#paint0_linear_6792_15004)"/> <path d="M148 55C152.971 55 157 50.9706 157 46C157 41.0294 152.971 37 148 37C143.029 37 139 41.0294 139 46C139 50.9706 143.029 55 148 55Z" fill="url(#paint1_linear_6792_15004)"/> <path d="M80 182C84.9706 182 89 177.971 89 173C89 168.029 84.9706 164 80 164C75.0294 164 71 168.029 71 173C71 177.971 75.0294 182 80 182Z" fill="url(#paint2_linear_6792_15004)"/> <path d="M96 85C98.2091 85 100 83.2091 100 81C100 78.7909 98.2091 77 96 77C93.7909 77 92 78.7909 92 81C92 83.2091 93.7909 85 96 85Z" fill="url(#paint3_linear_6792_15004)"/> <path d="M91 35C93.2091 35 95 33.2091 95 31C95 28.7909 93.2091 27 91 27C88.7909 27 87 28.7909 87 31C87 33.2091 88.7909 35 91 35Z" fill="url(#paint4_linear_6792_15004)"/> <path d="M93 153C95.2091 153 97 151.209 97 149C97 146.791 95.2091 145 93 145C90.7909 145 89 146.791 89 149C89 151.209 90.7909 153 93 153Z" fill="url(#paint5_linear_6792_15004)"/> <path d="M158 163C181.196 163 200 144.196 200 121C200 97.804 181.196 79 158 79C134.804 79 116 97.804 116 121C116 144.196 134.804 163 158 163Z" fill="url(#paint6_linear_6792_15004)"/> <defs> <linearGradient id="paint0_linear_6792_15004" x1="50.3816" y1="106" x2="58" y2="106" gradientUnits="userSpaceOnUse"> <stop offset="0.0729167" stop-color="#D953A8"/> <stop offset="1" stop-color="#D953A8" stop-opacity="0.49"/> </linearGradient> <linearGradient id="paint1_linear_6792_15004" x1="140.381" y1="46" x2="148" y2="46" gradientUnits="userSpaceOnUse"> <stop offset="0.0729167" stop-color="#D953A8"/> <stop offset="1" stop-color="#D953A8" stop-opacity="0.49"/> </linearGradient> <linearGradient id="paint2_linear_6792_15004" x1="72.3816" y1="173" x2="80" y2="173" gradientUnits="userSpaceOnUse"> <stop offset="0.0729167" stop-color="#D953A8"/> <stop offset="1" stop-color="#D953A8" stop-opacity="0.49"/> </linearGradient> <linearGradient id="paint3_linear_6792_15004" x1="92.6139" y1="81" x2="96" y2="81" gradientUnits="userSpaceOnUse"> <stop offset="0.0729167" stop-color="#D953A8"/> <stop offset="1" stop-color="#D953A8" stop-opacity="0.49"/> </linearGradient> <linearGradient id="paint4_linear_6792_15004" x1="87.6139" y1="31" x2="91" y2="31" gradientUnits="userSpaceOnUse"> <stop offset="0.0729167" stop-color="#D953A8"/> <stop offset="1" stop-color="#D953A8" stop-opacity="0.49"/> </linearGradient> <linearGradient id="paint5_linear_6792_15004" x1="89.6143" y1="149" x2="93" y2="149" gradientUnits="userSpaceOnUse"> <stop offset="0.0729167" stop-color="#D953A8"/> <stop offset="1" stop-color="#D953A8" stop-opacity="0.49"/> </linearGradient> <linearGradient id="paint6_linear_6792_15004" x1="122.449" y1="121" x2="158" y2="121" gradientUnits="userSpaceOnUse"> <stop offset="0.0729167" stop-color="#D953A8"/> <stop offset="1" stop-color="#D953A8" stop-opacity="0.49"/> </linearGradient> </defs> </svg>';
     const ARXIV_ICON = 'data:image/png;base64, ';
     const STREAM_ICON = 'data:image/png;base64, ';
     const NOTEBOOK_ICON = STREAM_ICON;

     // This script is invoked every time the Labs toggle is toggled, even when
     // it's toggled to disabled. So this check short-circuits the script if the
     // container already has content.
     if (containerAlreadyHasContent) {
       container.innerHTML = ""
       container.setAttribute("style", "display:none")
       return
     } else {
       container.setAttribute("style", "display:block")
     }

     // Get the arXiv paper ID from the URL, e.g. "2103.17249"
     // (this can be overridden for testing by passing a override_paper_id query parameter in the URL)
     const params = new URLSearchParams(document.location.search)
     const arxivPaperId = params.get("override_paper_id") || window.location.pathname.split('/').reverse()[0]
     if (!arxivPaperId) return

     const apiHost = "https://apis.ploutos.dev";
     const siteHost = "https://world.ploutos.dev";

     const sections = [
       ['arxiv', '/fsc/arxiv/read/'],
       ['streams', '/fsc/stream/by_arxiv/read/'],
       ['notebooks', '/fsc/notebook/by_arxiv/read/'],
    ];

    function loadSection(section) {
      const [name, url] = section;
      return fetch(`${apiHost}${url}`, {
        method: "post",
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          arxiv_id: arxivPaperId,
        })
      }).then(async (response) => {
        if (!response.ok) {
          render(name, []);
          return;
        }
        const objects = await response.json();
        render(name, Array.isArray(objects) ? objects : [objects]);
      }).catch((err) => {
         console.error(`Unable to fetch data from ${url}`, err);
         render(name, []);
      });
    }

    // Fetch 
    (async () => {
      return await Promise.all(sections.map(loadSection));
    })()

     // Generate HTML, sanitize it to prevent XSS, and inject into the DOM
    function render(section, objects) {
      if (!container.hasChildNodes()) {
          container.insertAdjacentHTML("beforeend", `<div class="ploutos-section"><h2 class="ploutos-title">${PLOUTOS_ICON} Ploutos World</h2><div class="ploutos-objects"><div class="ploutos-objects-arxiv"></div><div class="ploutos-objects-streams"></div><div class="ploutos-objects-notebooks"></div></div></div>`);
      }

      const element = container.querySelector(`.ploutos-objects-${section}`);

      element.innerHTML = window.DOMPurify.sanitize(`
           ${summary(section, objects)}
           ${renderObjects(section, objects)}
       `, { ADD_ATTR: ['target'] })
     }

     function summary(section, objects) {
      let name = section;
      switch (section) {
        case 'arxiv':
          name = 'Audio Summary';
          break
        case 'streams':
          name = 'Author Stream';
          break;
        case 'notebooks':
          name = 'Notebook Demo';
          break;
      }
      if (objects.length > 1) {
          return `<h3 class="ploutos-summary">${name} (${objects.length})</h3>`
      } else {
          return `<h3 class="ploutos-summary">${name}</h3>`
      }
     }

     function renderObjects(section, objects) {
      if (objects.length === 0) {
        switch (section) {
          case 'streams':
            return `<div class="ploutos-no-objects"><p>No stream scheduled yet.</p><p><a class="cta" href="${siteHost}/?stream-interest=${arxivPaperId}" target="_blank">Notify Me When Scheduled</a></p></div>`;
          case 'arxiv':
            return `<div class="ploutos-no-objects"><p>Audio summary not available yet.</p><p><a class="cta" href="${siteHost}/?audio-summary-interest=${arxivPaperId}" target="_blank">Generate & Notify Me</a></p></div>`;
          case 'notebooks':
            return `<div class="ploutos-no-objects"><p>No notebook demo linked yet.</p><p><a class="cta" href="${siteHost}/?notebook-create-for-arxiv=${arxivPaperId}" target="_blank">Add Demo on Ploutos</a></p></div>`;
        }
      }

       return `<div class="ploutos-objects">${objects.map(object => renderObject(section, object)).join("\n")}</div>`
     }

     function renderObject(section, object) {
      let path, name, tooltip, details;
      switch (section) {
        case 'arxiv':
          path = `/?article=${object.arxiv_id}`;
          icon = ARXIV_ICON;
          name = 'Listen to Audio Summary';
          tooltip = '5-min AI-narrated overview';
          details = [object.authors.join(', ') || '', object.published_datetime, `Plays: ${object.view_count || 0}`];
          break;
        case 'streams':
          path = `/?stream=${object.stream_id}`;
          icon = STREAM_ICON;
          name = 'Watch Now';
          tooltip = 'Hear the authors discuss the paper';
          details = [[object.speakers.map((s) => s.fullname).join(', '), object.uni_name].join(' ') || '', object.schedule_datetime, `Views: ${object.view_count || 0}`];
          break;
        case 'notebooks': 
          path = `/?notebook=${object.publish_details.publish_token}`;
          icon = NOTEBOOK_ICON;
          name = 'Run demo';
          tooltip = 'Executable code in the browser';
          details = [object.owner?.fullname, object.publish_details.publish_date];
          break;
      }

      if (!path) {
        return;
      }

       return `
         <div class="ploutos-object">
           <a href="${siteHost}${path}" target='_blank' title="${tooltip || ''}">
            <h4>${name}</h4>
            <img src="${icon}" class="icon" alt="icon">
            ${details.map((detail) => `<p>${detail}</p>`).join('\n')}
           </a>
         </div>
       `
     }
})();
